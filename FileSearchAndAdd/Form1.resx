<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>